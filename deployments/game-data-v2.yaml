kind: Service
apiVersion: v1
metadata:
  name: game-data
  labels:
    app: game-data
spec:
  selector:
    app: game-data
  ports:
  - name: http
    port: 7777
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: game-data-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: game-data
        version: v2
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: "game-data"
        image: "gcr.io/sensedia-bet/game_data:latest"
        env:
        - name: RABBIT_HOST
          valueFrom:
            configMapKeyRef:
              name: game-data-cfg
              key: RABBIT_HOST
        - name: RABBIT_PORT
          valueFrom:
            configMapKeyRef:
              name: game-data-cfg
              key: RABBIT_PORT
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              name: game-data-cfg
              key: MONGO_HOST
        - name: MONGO_PORT
          valueFrom:
            configMapKeyRef:
              name: game-data-cfg
              key: MONGO_PORT
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: game-data-cfg
              key: ENV_SPRING
        - name: RABBIT_USER
          valueFrom:
            secretKeyRef:
              name: game-data-sct
              key: RABBIT_USER
        - name: RABBIT_PASS
          valueFrom:
            secretKeyRef:
              name: game-data-sct
              key: RABBIT_PASS
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: game-data-sct
              key: MONGO_USER
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: game-data-sct
              key: MONGO_PASS
        - name: MATCHES
          valueFrom:
            configMapKeyRef:
              name: "game-data-matches"
              key: "MATCHES"
        ports:
        - name: http
          containerPort: 7777
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 30
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 30
